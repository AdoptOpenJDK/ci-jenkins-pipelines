// Build once a day
CRON_SETTINGS = '''H H * * *'''
NODE_LABEL = "dockerBuild&&linux&&x64"

pipeline {
    agent none

    triggers {
        cron(CRON_SETTINGS)
    }

    stages {
        stage('Dependency Build') {
            parallel {
                stage('asmtools') {
                    agent {
                        label "${NODE_LABEL}"
                    }
                    steps {
                        build('asmtools', '*.tar.gz, asmtools.jar, asmtools.jar.*.txt, *.tar.gz.*sum*.txt')
                    }
                }
                stage('jcov') {
                    agent {
                        label "${NODE_LABEL}"
                    }
                    steps {
                        build('jcov', 'jcov*.tar.gz, jcov*.sha256sum.txt')
                    }
                }
                stage('jtharness') {
                    agent {
                        label "${NODE_LABEL}"
                    }
                    steps {
                        build('jtharness', 'jtharness*.tar.gz, *.tar.gz.sha256sum.txt')
                    }
                }
                stage('sigtest') {
                    agent {
                        label "${NODE_LABEL}"
                    }
                    steps {
                        build('sigtest', 'sigtest.tar.gz')
                    }
                }
            }
        }

        stage('Jtreg Downstream Build') {
            agent {
                label "${NODE_LABEL}"
            }
            steps {
                build('jtreg', 'jtreg*.tar.gz, jtreg*.sha256sum.txt')
            }
        }
    }
}

def build(stageName) {
    cleanWs()
    docker.image('adoptopenjdk/centos6_build_image').inside {
        sh "hg clone http://hg.openjdk.java.net/code-tools/${stageName}"
        checkout scm
        sh label: "${stageName}", script: "./tools/code-tools/${stageName}.sh"
        archiveArtifacts artifacts: "${archiveGlob}", followSymlinks: false
        slackSend channel: 'jenkins', color: 'good', message: "${env.JOB_NAME}:${env.BUILD_NUMBER} PASSED", teamDomain: 'adoptopenjdk'
    }
}